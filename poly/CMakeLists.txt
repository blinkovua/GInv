PROJECT(ginvinteger)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(GINV_INTEGER_VERSION_MAJOR 1)
SET(GINV_INTEGER_VERSION_MINOR 0)
SET(GINV_INTEGER_VERSION_PATCH 1)
SET(GINV_INTEGER_VERSION "${GINV_INTEGER_VERSION_MAJOR}.${GINV_INTEGER_VERSION_MINOR}")
SET(GINV_INTEGER_VERSION_FULL "${GINV_INTEGER_VERSION}.${GINV_INTEGER_VERSION_PATCH}")

IF("${PROJECT_SOURCE_DIR}" STREQUAL "${PROJECT_BINARY_DIR}")
  MESSAGE(SEND_ERROR "In-source builds are not allowed.")
ENDIF("${PROJECT_SOURCE_DIR}" STREQUAL "${PROJECT_BINARY_DIR}")

INCLUDE(CPack)

#if you don't want the full compiler output, comment the following line
# SET(CMAKE_VERBOSE_MAKEFILE ON)

#Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.
SET(CMAKE_BUILD_TYPE Debug)

# MSVC does not require any special flags
IF(UNIX)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++11")
ENDIF(UNIX)

# SET(BUILD_DOC TRUE)
SET(BUILD_TEST TRUE)
# SET(BUILD_FOR_PYTHON TRUE)
SET(USE_ALLOCATOR TRUE)

INCLUDE_DIRECTORIES("../")
LINK_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}/../util/")

FIND_LIBRARY(GMP gmp)
FIND_PATH(GMP_HEADERS gmp.h)
IF (GMP AND GMP_HEADERS)
  MESSAGE("-- Looking for gmp - found")
ELSE (GMP AND GMP_HEADERS )
  MESSAGE( FATAL_ERROR "-- Looking for gmp - not found")
ENDIF (GMP AND GMP_HEADERS)

IF(BUILD_DOC)
  INCLUDE(FindDoxygen)
ENDIF(BUILD_DOC)

IF(BUILD_TEST)
  FIND_LIBRARY(CPPUNIT cppunit)
  FIND_PATH(CPPUNIT_HEADERS cppunit/TestRunner.h)
  IF (CPPUNIT AND CPPUNIT_HEADERS)
    MESSAGE("-- Looking for Cppunit - found")
  ELSE (CPPUNIT AND CPPUNIT_HEADERS )
    MESSAGE( FATAL_ERROR "-- Looking for Cppunit - not found")
  ENDIF (CPPUNIT AND CPPUNIT_HEADERS)
  ADD_SUBDIRECTORY(test)
ENDIF(BUILD_TEST)

IF(BUILD_FOR_PYTHON)
  ADD_DEFINITIONS(-fPIC)
  IF(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
  ENDIF(UNIX)
ENDIF(BUILD_FOR_PYTHON)

IF(WIN32)
  SET(GINV_INTEGER_WIN32 TRUE)
ENDIF(WIN32)

SET(GINV_INTEGER_ALLOCATOR ${USE_ALLOCATOR})

CONFIGURE_FILE(config.h.in "${PROJECT_SOURCE_DIR}/config.h")

ADD_LIBRARY(ginvpoly STATIC
  config.h
  integer.cpp
  integer.h
  monom.cpp
  monom.h
)

TARGET_LINK_LIBRARIES(ginvpoly
  ginvutil
  gmp
)
